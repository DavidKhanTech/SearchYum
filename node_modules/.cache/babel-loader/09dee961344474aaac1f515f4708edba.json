{"ast":null,"code":"var _jsxFileName = \"/Users/davidsmacbookpro/Desktop/RecipeApp/SearchYum/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Recipe from \"./components/Recipe\"; // console error fix\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport Alerts from \"./components/Alerts\";\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";\nimport Contact from \"./components/Contact\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  // creating state query for data and setQuery is method\n  const [query, setQuery] = useState(\"\"); // create recipes\n\n  const [recipes, setRecipes] = useState([]); // alerts\n\n  const [alert, setAlert] = useState(\"\");\n  const appId = \"f546136b\";\n  const key = \"a92b6c90a77faae0bb4555f47a23924f\";\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${appId}&app_key=${key}`;\n\n  const data = async () => {\n    // setting alert if query does not equal empty string\n    if (query !== \"\") {\n      const result = await Axios.get(url);\n\n      if (!result.data.more) {\n        return setAlert(\"Is that food? Try another name\");\n      }\n\n      setRecipes(result.data.hits);\n      setQuery(\"\");\n      setAlert(\"\");\n    } else {\n      setAlert(\"Please enter an ingredient\");\n    }\n  };\n\n  const searchInput = e => {\n    setQuery(e.target.value);\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    data();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/Contact\",\n    component: Contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"search\",\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, alert !== \"\" && /*#__PURE__*/React.createElement(Alerts, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Whats in your fridge?\",\n    onChange: searchInput,\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, recipes !== [] && recipes.map(recipe => /*#__PURE__*/React.createElement(Recipe, {\n    key: uuidv4(),\n    recipe: recipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 35\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/davidsmacbookpro/Desktop/RecipeApp/SearchYum/src/App.js"],"names":["React","useState","Axios","Recipe","v4","uuidv4","Alerts","Home","Header","Contact","BrowserRouter","Router","Route","Link","App","query","setQuery","recipes","setRecipes","alert","setAlert","appId","key","url","data","result","get","more","hits","searchInput","e","target","value","submit","preventDefault","map","recipe"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Recipe from \"./components/Recipe\";\n// console error fix\nimport { v4 as uuidv4 } from \"uuid\";\nimport Alerts from \"./components/Alerts\";\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";\nimport Contact from \"./components/Contact\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  // creating state query for data and setQuery is method\n  const [query, setQuery] = useState(\"\");\n  // create recipes\n  const [recipes, setRecipes] = useState([]);\n  // alerts\n  const [alert, setAlert] = useState(\"\");\n\n  const appId = \"f546136b\";\n  const key = \"a92b6c90a77faae0bb4555f47a23924f\";\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${appId}&app_key=${key}`;\n\n  const data = async () => {\n    // setting alert if query does not equal empty string\n    if (query !== \"\") {\n      const result = await Axios.get(url);\n      if (!result.data.more) {\n        return setAlert(\"Is that food? Try another name\");\n      }\n      setRecipes(result.data.hits);\n\n      setQuery(\"\");\n      setAlert(\"\");\n    } else {\n      setAlert(\"Please enter an ingredient\");\n    }\n  };\n  const searchInput = (e) => {\n    setQuery(e.target.value);\n  };\n  const submit = (e) => {\n    e.preventDefault();\n    data();\n  };\n  return (\n    <>\n      <Router>\n        <div>\n          <Header />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/Contact\" component={Contact} />\n        </div>\n      </Router>\n      <form className=\"search\" onSubmit={submit}>\n        {alert !== \"\" && <Alerts alert={alert} />}\n        <input\n          type=\"text\"\n          placeholder=\"Whats in your fridge?\"\n          onChange={searchInput}\n          value={query}\n        />\n        <input type=\"submit\" value=\"Search\" />\n      </form>\n      {/* -----------------------recipes----------------- */}\n\n      <div className=\"recipes\">\n        {/* condition to check if recipe array is empty or not if empty recieve data */}\n        {recipes !== [] &&\n          recipes.map((recipe) => <Recipe key={uuidv4()} recipe={recipe} />)}\n      </div>\n    </>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}